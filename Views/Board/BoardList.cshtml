@model MyWebApplication.Models.BoardImageCellsViewModel

@{
    Layout = null;
    List<Board> boards = Model.Boards.ToList();
    List<string> images = Model.b64Images.ToList();
    int newOffset = ViewData["newOffset"] as int? ?? 0;
    bool moreBoardsAvailable = ViewData["boardsAvailable"] as bool? ?? false;
}

@for (var i = 0; i < Math.Min(images.Count, boards.Count); i++)
{
    if (i == 3)
    {
        if (moreBoardsAvailable)
        {
            <div id="more-link"
                 hx-get="/Board/List?offset=@newOffset"
                 hx-trigger="intersect once"
                 hx-target="#boardTable"
                 hx-swap="beforeend"
            >
            </div>
        }
    }
    <div class="board-row">
        <div class="col-4">
            <a asp-action="Load" asp-route-id="@boards[i].Id">
                @Html.DisplayFor(modelItem => boards[i].Name)
            </a>
        </div>
        <div class="col-2">
            <a asp-action="Load" asp-route-id="@boards[i].Id">
                <div class="imgPreviewContainer">
                    <img class="imgPreview" src="data:image/png;base64,@images[i]"/>
                </div>
            </a>
        </div>
        <div class="col-2">
            <div class="boardSizeDisp">
                @Html.DisplayFor(modelItem => boards[i].Size) x @Html.DisplayFor(modelItem => boards[i].Size)
            </div>
        </div>
        <div class="col-3">
            <div class="buttonsContainer">
            <a asp-action="Edit" asp-route-id="@boards[i].Id">  
                <button class="btn btn-light"><i class="fa-solid fa-edit"></i></button></a>
                    <button class="btn btn-light" hx-delete="/Board/HXDelete?id=@boards[i].Id" hx-target="closest .row" hx-swap="delete"><i class="fa-solid fa-trash"></i></button>
            </div>
        </div>  
    </div>
}

@{
    
}

